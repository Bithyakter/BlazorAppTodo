@page "/deletecountry/{Id}"
@using BlazorAppTodo.Shared

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<h2>Delete Country</h2>

@if (country != null)
{
   <p>Are you sure you want to delete this country: <b>@country.CountryName</b></p>

   <div class="row ps-2 pe-2">
      <div class="col-md-8">
         <div class="card">
            <div class="card-body">
               <table class="table mt-3 table-bordered">
                  <tr>
                     <td class="mt-2">Country Name</td>
                     <td>@country.CountryName</td>
                  </tr>
                  <tr>
                     <td class="mt-2">Country Code</td>
                     <td>@country.CountryCode</td>
                  </tr>
                  <tr>
                     <td class="mt-2">ISO Code Alpha2</td>
                     <td>@country.ISOCodeAlpha2</td>
                  </tr>
               </table>
            </div>
         </div>
      </div>
   </div>
}

<div class="row mt-2">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-lg btn-primary" @onclick="@Delete" value="Delete" />
            <input type="button" class="btn btn-lg btn-outline-secondary mx-3" @onclick="@Cancel" value="Cancel" />
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Id{ get; set; }

    CountryViewModel country = new CountryViewModel();

    protected override async Task OnInitializedAsync()
    {
      country = await Http.GetFromJsonAsync<CountryViewModel>("api/country/" + Id);
    }

    protected async Task Delete()
    {
        var response = await Http.DeleteAsync("api/Country/" + Id);
        bool deleteResponse = await response.Content.ReadFromJsonAsync<bool>();

        if (deleteResponse)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Deleted Successfully!");
            NavigationManager.NavigateTo("countrylist");
        }
    }

    void Cancel()
    {
      NavigationManager.NavigateTo("countrylist");
    }
}
