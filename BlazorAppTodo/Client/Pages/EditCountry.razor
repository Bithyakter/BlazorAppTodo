@page "/editcountry/{Id}"
@using BlazorAppTodo.Shared

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<h2 class="ps-4">Edit Country</h2>

<div class="row ps-4 pe-4">
   <div class="col-md-8">
      <div class="card">
         <div class="card-header">
            Country
         </div>

          <div class="card-body mb-3">
             <div class="col-md-12 mt-3">
                 <div class="form-group">
                  <label for="CountryName"> Country Name *</label>
                  <input form="CountryName" class="form-control" @bind="@country.CountryName" />
                 </div>
             </div>

             <div class="col-md-12 mt-3">
                 <div class="form-group">
                  <label for="CountryCode"> Country Code *</label>
                  <input form="CountryCode" class="form-control" @bind="@country.CountryCode" />
                 </div>
             </div>

             <div class="col-md-12 mt-3">
                 <div class="form-group">
                  <label for="ISOCodeAlpha2"> ISO Code Alpha2 *</label>
                  <input form="ISOCodeAlpha2" class="form-control" @bind="@country.ISOCodeAlpha2" />
                 </div>
             </div>

         </div>
      </div>
   </div>

   <div class="col-md-8 text-center">
        <div class="form-group">
            <input type="button" class="btn btn-lg btn-primary" @onclick="@Save" value="Save" />
            <input type="button" class="btn btn-lg btn-outline-secondary mx-3" @onclick="@Cancel" value="Cancel" />
        </div>
    </div>
</div>

@*<div class="row mt-3">
    
</div>*@

@code {
    [Parameter]
    public string Id{ get; set; }
    CountryViewModel country = new CountryViewModel();

    protected override async Task OnInitializedAsync()
    {
      country = await Http.GetFromJsonAsync<CountryViewModel>("api/country/" + Id);
    }

    protected async Task Save()
    {
      var response = await Http.PutAsJsonAsync("api/Country/" + Id, @country);
      bool personResponse = await response.Content.ReadFromJsonAsync<bool>();
        
      if (personResponse)
      {
            await JsRuntime.InvokeVoidAsync("alert", "Updated Successfully!");
            NavigationManager.NavigateTo("countrylist");
      }

    }

    void Cancel()
    {
        NavigationManager.NavigateTo("countrylist");
    }
}
